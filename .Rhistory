library(readr)
Bee_Measure <- read_csv("Bee_Measure.csv")
View(Bee_Measure)
library(readr)
Bee_Weight <- read_csv("Bee_Weight.csv")
View(Bee_Weight)
library(readr)
Day_Pupation <- read_csv("Day_Pupation.csv")
View(Day_Pupation)
library(readr)
Distance_Travel <- read_csv("Distance_Travel.csv")
View(Distance_Travel)
dataPup <- Day_Pupation
library(dplyr)
library(RVAideMemoire)
library(car)
library(psych)
library(rstatix)
library(DescTools)
library(ggplot2)
library(ggstatsplot)
library(FSA)
library(rstatix)
library(dplyr)
library(RVAideMemoire)
library(car)
library(psych)
library(rstatix)
library(DescTools)
library(ggplot2)
library(ggstatsplot)
library(FSA)
library(rstatix)
dataPup <- Day_Pupation
dataWeight <- Bee_Weight
dataMeasure <- Bee_Measure
dataDistance <- as.data.frame(unclass(Distance_Travel),
stringsAsFactors = TRUE) %>%
mutate(Group = factor (Group))
dataWeight <- as.data.frame(unclass(Bee_Weight),
stringsAsFactors = TRUE) %>%
mutate(Group = factor (Group))
byf.shapiro(Day ~ Group, dataPup)
byf.shapiro (Weight ~ Group, dataWeight)
byf.shapiro (Abd_Leng ~ Group, dataMeasure)
byf.shapiro (Distance ~ Group, dataDistance)
dataPup %>%
group_by(Group) %>%
identify_outliers(Day)
dataWeight %>%
group_by(Group) %>%
identify_outliers(Weight)
dataMeasure %>%
group_by(Group) %>%
identify_outliers(Abd_Leng)
dataDistance %>%
group_by(Group) %>%
identify_outliers(Distance)
anova_Day <- aov(Day ~ Group, dataPup)
summary(anova_Day)
anova_Weight <- aov(Weight ~ Group, dataWeight)
summary(anova_Weight)
anova_measure <- aov(Abd_Leng ~ Group, dataMeasure)
summary(anova_measure)
anova_distance <- aov(Distance ~ Group, dataDistance)
summary(anova_distance)
PostHocTest(anova_Weight, method = "duncan")
PostHocTest(anova_measure, method = "duncan")
PostHocTest(anova_distance, method = "duncan")
round(
cbind(duncan = PostHocTest(anova_Weight, method = "duncan")$Group [,"pval"],
bonf = PostHocTest (anova_Weight, method = "hsd")$Group [, "pval"],
hsd = PostHocTest (anova_Weight, method="bonf")$Group[,"pval"])
,6)
round(
cbind(duncan = PostHocTest(anova_measure, method = "duncan")$Group [,"pval"],
bonf = PostHocTest (anova_measure, method = "hsd")$Group [, "pval"],
hsd = PostHocTest (anova_measure, method="bonf")$Group[,"pval"])
,6)
round(
cbind(duncan = PostHocTest(anova_distance, method = "duncan")$Group [,"pval"],
bonf = PostHocTest (anova_distance, method = "hsd")$Group [, "pval"],
hsd = PostHocTest (anova_distance, method="bonf")$Group[,"pval"])
,6)
describeBy(dataMeasure$Abd_Leng, group = dataMeasure$Group)
describeBy(dataDistance$Distance, group = dataDistance$Group)
kruskal.test(Day ~ Group, data = dataPupFact)
dataPupFact <- Day_Pupation
kruskal.test(Day ~ Group, data = dataPupFact)
#Mean day of pupation
dunn_test(Day ~ Group, data = dataPupFact, p.adjust.method = "bonferroni")
dataPupFact %>% group_by(Group) %>%
get_summary_stats(Day, type = "median_iqr")
#Mean day of pupation
dunn_test(Day ~ Group, data = dataPup, p.adjust.method = "bonferroni")
dataPup %>% group_by(Group) %>%
get_summary_stats(Day, type = "median_iqr")
ggbetweenstats(
data = dataPup,
x = Group,
y = Day,
type = "nonparametric", # ANOVA or Kruskal-Wallis
plot.type = "box",
pairwise.comparisons = FALSE,
pairwise.display = "significant",
centrality.plotting = FALSE,
bf.message = FALSE,
ggplot.component = list(ggplot2::scale_y_continuous(
limits = (c(5, 10))))
)+
labs (y = "Day of pupation", x = "Percent Dietary Ethanol")+
theme(
text = element_text (size = 15),
axis.title.y = element_text(vjust = 2),
axis.title.x = element_text(vjust = -0.5)
)
library(readr)
survivalData <- read_csv("survivalData.csv")
View(survivalData)
library(tidyverse)
library(janitor)
library(tidyquant)
library(patchwork)
library(survival)
library(survminer)
library(dplyr)
library(rlang)
library(tidyverse)
library(janitor)
library(tidyquant)
library(patchwork)
library(survival)
library(survminer)
library(dplyr)
library(rlang)
survivalData <- survivalData
fit1 <- survfit(Surv(as.numeric(time,event)) ~ 1, data = survivalData)
summary(fit1)
ggsurvplot(fit1, data = survivalData)
kmsurviv <- ggsurvplot(fit1, data = survivalData)
fit2 <- survfit(Surv(as.numeric(time,event)) ~ treatment, data = survivalData)
ggsurvplot(fit2, data = survivalData)
kmTreatment <- ggsurvplot(fit2, data = survivalData,
xlim= c(1,20),
break.x.by= 2, xlab = "Days", ylab= c ("Percent Survival"),
legend.title = "",
legend.labs = c("3%", "6%", "9%", "0"),
palette = c("darkorange","blue", "red", "darkgreen"),
pval = F,
risk.table = F,
conf.int = T,
tables.theme = theme_cleantable())
print(kmTreatment)
fitc3 <- survfit(Surv(as.numeric(time,event)) ~ treatment , data = control_3)
ggsurvplot(fitc3, data = control_3,
legend.title = "treatments",
legend.labs = c("3%", "control"),
pval = T,
risk.table = T,
conf.int = T,
tables.theme = theme_cleantable())
fitc3 <- survfit(Surv(as.numeric(time,event)) ~ treatment , data = control_3)
library(readxl)
control_9 <- read_excel("control-9.xlsx")
View(control_9)
library(readxl)
control_3 <- read_excel("control-3.xlsx")
View(control_3)
library(readxl)
control_6 <- read_excel("control-6.xlsx")
View(control_6)
fitc3 <- survfit(Surv(as.numeric(time,event)) ~ treatment , data = control_3)
fitc6 <- survfit(Surv(as.numeric(time,event)) ~ treatment , data = control_6)
fitc9 <- survfit(Surv(as.numeric(time,event)) ~ treatment , data = control_9)
ggsurvplot(fitc3, data = control_3,
legend.title = "treatments",
legend.labs = c("3%", "control"),
pval = T,
risk.table = T,
conf.int = T,
tables.theme = theme_cleantable())
ggsurvplot(fitc6, data = control_6,
legend.title = "treatments",
legend.labs = c("6%", "control"),
pval = T,
risk.table = T,
conf.int = T,
tables.theme = theme_cleantable())
ggsurvplot(fitc9, data = control_9,
legend.title = "treatments",
legend.labs = c("9%", "control"),
pval = T,
risk.table = T,
conf.int = T,
tables.theme = theme_cleantable())
library(dplyr)
library(RVAideMemoire)
library(car)
library(psych)
library(rstatix)
library(DescTools)
library(ggplot2)
library(ggstatsplot)
library(FSA)
library(rstatix)
library(dplyr)
library(RVAideMemoire)
library(car)
library(psych)
library(rstatix)
library(DescTools)
library(ggplot2)
library(ggstatsplot)
library(FSA)
library(rstatix)
dataPup <- Day_Pupation
library(readr)
Bee_Measure <- read_csv("Bee_Measure.csv")
View(Bee_Measure)
library(readr)
Bee_Weight <- read_csv("Bee_Weight.csv")
View(Bee_Weight)
library(readr)
Day_Pupation <- read_csv("Day_Pupation.csv")
View(Day_Pupation)
library(readr)
Distance_Travel <- read_csv("Distance_Travel.csv")
View(Distance_Travel)
dataPup <- Day_Pupation
dataWeight <- Bee_Weight
dataMeasure <- Bee_Measure
dataDistance <- as.data.frame(unclass(Distance_Travel),
stringsAsFactors = TRUE) %>%
mutate(Group = factor (Group))
dataWeight <- as.data.frame(unclass(Bee_Weight),
stringsAsFactors = TRUE) %>%
mutate(Group = factor (Group))
glimpse(dataPup)
glimpse(dataWeight)
glimpse(dataMeasure)
glimpse(dataDistance)
byf.shapiro(Day ~ Group, dataPup)
byf.shapiro (Weight ~ Group, dataWeight)
byf.shapiro (Abd_Leng ~ Group, dataMeasure)
byf.shapiro (Distance ~ Group, dataDistance)
dataPup %>%
group_by(Group) %>%
identify_outliers(Day)
dataWeight %>%
group_by(Group) %>%
identify_outliers(Weight)
dataMeasure %>%
group_by(Group) %>%
identify_outliers(Abd_Leng)
dataDistance %>%
group_by(Group) %>%
identify_outliers(Distance)
anova_Day <- aov(Day ~ Group, dataPup)
summary(anova_Day)
anova_Weight <- aov(Weight ~ Group, dataWeight)
summary(anova_Weight)
anova_measure <- aov(Abd_Leng ~ Group, dataMeasure)
summary(anova_measure)
anova_distance <- aov(Distance ~ Group, dataDistance)
summary(anova_distance)
round(
cbind(duncan = PostHocTest(anova_Weight, method = "duncan")$Group [,"pval"],
bonf = PostHocTest (anova_Weight, method = "hsd")$Group [, "pval"],
hsd = PostHocTest (anova_Weight, method="bonf")$Group[,"pval"])
,6)
round(
cbind(duncan = PostHocTest(anova_measure, method = "duncan")$Group [,"pval"],
bonf = PostHocTest (anova_measure, method = "hsd")$Group [, "pval"],
hsd = PostHocTest (anova_measure, method="bonf")$Group[,"pval"])
,6)
round(
cbind(duncan = PostHocTest(anova_distance, method = "duncan")$Group [,"pval"],
bonf = PostHocTest (anova_distance, method = "hsd")$Group [, "pval"],
hsd = PostHocTest (anova_distance, method="bonf")$Group[,"pval"])
,6)
describeBy(dataWeight$Weight, group = dataWeight$Group)
describeBy(dataMeasure$Abd_Leng, group = dataMeasure$Group)
describeBy(dataDistance$Distance, group = dataDistance$Group)
kruskal.test(Day ~ Group, data = dataPup)
#Mean day of pupation
dunn_test(Day ~ Group, data = dataPup, p.adjust.method = "bonferroni")
dataPup %>% group_by(Group) %>%
get_summary_stats(Day, type = "median_iqr")
ggbetweenstats(
data = dataPup,
x = Group,
y = Day,
type = "nonparametric", # ANOVA or Kruskal-Wallis
plot.type = "box",
pairwise.comparisons = FALSE,
pairwise.display = "significant",
centrality.plotting = FALSE,
bf.message = FALSE,
ggplot.component = list(ggplot2::scale_y_continuous(
limits = (c(5, 10))))
)+
labs (y = "Day of pupation", x = "Percent Dietary Ethanol")+
theme(
text = element_text (size = 15),
axis.title.y = element_text(vjust = 2),
axis.title.x = element_text(vjust = -0.5)
)
ggbetweenstats(
data = dataWeight,
x = Group,
y = Weightmg,
type = "parametric", # ANOVA (parametric) or Kruskal-Wallis (non-parametric)
plot.type = "box",
pairwise.comparisons = TRUE,
pairwise.display = "significant",
centrality.plotting = FALSE,
bf.message = FALSE,
ggplot.component = list(ggplot2::scale_y_continuous(
limits = (c(4, 14)),
breaks = seq(4, 14, by = 2)))
)+
labs (y = "Weight (mg)", x = "Percent Dietary Ethanol")+
theme(
text = element_text (size = 15),
axis.title.y = element_text(vjust = 2),
axis.title.x = element_text(vjust = -0.5)
)+
ggplot2::scale_color_manual(values = c("darkgreen","darkorange", "blue", "red"))
ggbetweenstats(
data = dataDistance,
x = Group,
y = Distance,
type = "parametric", # ANOVA or Kruskal-Wallis
plot.type = "box",
pairwise.comparisons = FALSE,
pairwise.display = "significant",
centrality.plotting = FALSE,
bf.message = FALSE,
ggplot.component = list(ggplot2::scale_y_continuous(
limits = (c(0, 30)),
breaks = seq(0, 30, by = 10)))
)+
labs (y = "Distance Travelled (cm)", x = "Percent Dietary Ethanol")+
theme(
text = element_text (size = 15),
axis.title.y = element_text(vjust = 2),
axis.title.x = element_text(vjust = -0.5)
)
ggbetweenstats(
data = dataDistance,
x = Group,
y = Velocity,
type = "parametric", # ANOVA or Kruskal-Wallis
plot.type = "box",
pairwise.comparisons = FALSE,
pairwise.display = "significant",
centrality.plotting = FALSE,
bf.message = FALSE,
ggplot.component = list(ggplot2::scale_y_continuous(
limits = (c(0, 2)),
breaks = seq(0, 2, by = 0.5)))
)+
labs (y = "Velocity (cm/s)", x = "Percent Dietary Ethanol")+
theme(
text = element_text (size = 15),
axis.title.y = element_text(vjust = 2),
axis.title.x = element_text(vjust = -0.5)
)
library(dplyr)
library(RVAideMemoire)
library(car)
library(psych)
library(rstatix)
library(DescTools)
library(ggplot2)
library(ggstatsplot)
library(FSA)
library(rstatix)
library(dplyr)
library(RVAideMemoire)
library(car)
library(psych)
library(rstatix)
library(DescTools)
library(ggplot2)
library(ggstatsplot)
library(FSA)
library(rstatix)
dataPup <- Day_Pupation
dataWeight <- Bee_Weight
dataMeasure <- Bee_Measure
dataDistance <- as.data.frame(unclass(Distance_Travel),
stringsAsFactors = TRUE) %>%
mutate(Group = factor (Group))
dataWeight <- as.data.frame(unclass(Bee_Weight),
stringsAsFactors = TRUE) %>%
mutate(Group = factor (Group))
ggbetweenstats(
data = dataPup,
x = Group,
y = Day,
type = "nonparametric", # ANOVA or Kruskal-Wallis
plot.type = "box",
pairwise.comparisons = FALSE,
pairwise.display = "significant",
centrality.plotting = FALSE,
bf.message = FALSE,
ggplot.component = list(ggplot2::scale_y_continuous(
limits = (c(5, 10))))
)+
labs (y = "Day of pupation", x = "Percent Dietary Ethanol")+
theme(
text = element_text (size = 15),
axis.title.y = element_text(vjust = 2),
axis.title.x = element_text(vjust = -0.5)
)
